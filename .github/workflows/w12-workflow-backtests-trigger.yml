# """
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """
name: 12. Backtests Workflow Trigger
on:
  workflow_dispatch:
    inputs:
      id:
        description: 'run identifier'
        required: false
      name:
        description: 'Run Details'
        required: false
        default: 'PKScreener - Backtests Workflow Trigger'
      installtalib:
        description: 'Is TA-Lib install required? (Y/N)'
        required: false
        default: 'Y'
      targetPythonVersion:
        description: 'Target Python version: 3.9 , 3.10, 3.11 ?'
        required: false
        type: string
        default: '3.12'
        
  # schedule:
  # - cron: '40 11 * * 0-6'
  # - cron: '20 12 * * 0-6'
  # - cron: '30 18 * * 5,6'

jobs:

  Backtests_Trigger:

    runs-on: windows-latest
    outputs:
      runIdentifier: ${{ github.event.inputs.id }}

    steps:
    - uses: actions/checkout@v4
      with:
        ref: gh-pages

    # - name: Take pull from main
    #   shell: bash
    #   run: |
    #     git config user.name github-actions >/dev/null 2>&1
    #     git config user.email github-actions@github.com >/dev/null 2>&1
    #     git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*' >/dev/null 2>&1
    #     git remote update >/dev/null 2>&1
    #     git fetch >/dev/null 2>&1
    #     git config pull.rebase false >/dev/null 2>&1
    #     git pull origin main
    #     git push -v -u origin +gh-pages >/dev/null 2>&1

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.targetPythonVersion || 3.12 }}

    - name: Restore Dependencies from Cache
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install TA-Lib on windows
      if: ${{ inputs.installtalib != 'N' && startsWith(runner.os, 'Windows') }}
      shell: bash
      run: |
        python3 -m pip install --upgrade pip
        cd .github/dependencies/
        if [[ "${{ inputs.targetPythonVersion }}" == "" ]] ;then
          pip3 install ta_lib-0.6.0-cp312-cp312-win_amd64.whl
        elif [[ "${{ inputs.targetPythonVersion }}" == "3.9" ]] ;then
          pip3 install TA_Lib-0.4.19-cp39-cp39-win_amd64.whl
        elif [[ "${{ inputs.targetPythonVersion }}" == "3.11" ]] ;then
          pip3 install TA_Lib-0.4.29-cp311-cp311-win_amd64.whl
        elif [[ "${{ inputs.targetPythonVersion }}" == "3.12" ]] ;then
          pip3 install ta_lib-0.6.0-cp312-cp312-win_amd64.whl
        fi
    - name: Install Python Dependencies
      shell: bash
      run: |
        pip3 install -r requirements.txt
        pip3 install .

    - name: Trigger Backtests
      timeout-minutes: 180
      run: |
        python3 .github/workflows/workflowtriggers.py -b -f -u "-1001785195297" -s0 "S,T,E,U,Z,F,H,Y,X,F,G,C,M,D,I,L,P" -s1 "W,N,E,M,Z,S,0,2,3,4,6,7,9,10,13,15" -s2 "0,22,29,42,50,M,Z" -s3 "0" -s4 "0" --branchname gh-pages
      shell: bash
      env:
        GITHUB_TOKEN : ${{secrets.GITHUB_TOKEN}}

    # - name: Trigger Intraday Backtests
    #   run: |
    #     python3 .github/workflows/workflowtriggers.py -b -i -u "-1001785195297" -s0 "S,T,E,U,Z,F,H,Y,X,C" -s1 "W,N,E,M,Z,S,0,1,2,3,4,5,6,7,8,9,10,11,13" -s2 "0,21,22,29,42,50,M,Z" -s3 "0"
    #   shell: bash
    #   env:
    #     GITHUB_TOKEN : ${{secrets.GITHUB_TOKEN}}
  # Delete_Workflow_Run:
  #   runs-on: ubuntu-latest
  #   needs: [Backtests_Trigger]
  #   name: Delete workflow run
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: main

  #     - name: Delete this workflow run
  #       if: startsWith(runner.os, 'Linux')
  #       shell: bash
  #       run: |
  #         for id in $(gh run list --limit 100 --jq ".[] | select (.status == \"success\" ) | .databaseId" --json databaseId,status); do gh run delete $id; done
  #         for id in $(gh run list --limit 100 --jq ".[] | select (.status == \"cancelled\" ) | .databaseId" --json databaseId,status); do gh run delete $id; done
  #         for id in $(gh run list --limit 100 --jq ".[] | select (.status == \"failure\" ) | .databaseId" --json databaseId,status); do gh run delete $id; done
  #         # echo ${{ needs.Backtests_Trigger.outputs.runIdentifier }} | xargs -IID gh api "repos/$(gh repo view --json nameWithOwner -q .nameWithOwner)/actions/runs/ID" -X DELETE
  #         # Cancel runs queued or in_progress. See https://cli.github.com/manual/gh_run_list
  #         # for id in $(gh run list -w "13. Backtest for Generic" --limit 100 --jq ".[] | select (.status == \"queued\" ) | .databaseId" --json databaseId,status); do gh run cancel $id; done 
  #       env:
  #         GH_TOKEN : ${{secrets.GITHUB_TOKEN}}