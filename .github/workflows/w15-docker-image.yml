# """
#     The MIT License (MIT)

#     Copyright (c) 2023 pkjmesra

#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:

#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.

#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

# """
name: 8. Docker Image CI

on:
  workflow_dispatch:
      inputs:
        name:
          description: 'Docker build'
          required: false
          default: 'pkscreener - docker'
        branch-name:
          required: true
          type: string
          default: 'main'
        version:
          required: false
          type: string
          default: 'x.y.z'
        buildBase:
          description: 'Build Docker base image before building the main app image'
          required: false
          type: string
          default: 'N'

  workflow_call:
    inputs:
      branch-name:
        required: true
        type: string
        default: 'main'
      version:
        required: false
        type: string
        default: 'x.y.z'
      buildBase:
        description: 'Build Docker base image before building the main app image'
        required: false
        type: string
        default: 'N'
  push:
    # branches: [ main ]
    tags:
      - '*'

jobs:

  build:

    runs-on: ubuntu-latest #macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch-name }}

    # - name: Setup docker (missing on MacOS)
    #   if: runner.os == 'macos'
    #   run: |
    #     brew install docker
    #     colima start
        
    #     # For testcontainers to find the Colima socket
    #     # https://github.com/abiosoft/colima/blob/main/docs/FAQ.md#cannot-connect-to-the-docker-daemon-at-unixvarrundockersock-is-the-docker-daemon-running
    #     sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: install buildx
      id: buildx
      uses: docker/setup-buildx-action@v3.3.0
      with:
        version: latest

    - name: Publish latest base image to Docker Hub
      if: ${{ inputs.buildBase == 'Y' }}
      run: |
        docker buildx create --use
        export DOCKER_BUILDKIT=1
        DOCKER_BUILDKIT=1 docker buildx build --push \
          --tag pkjmesra/pkscreener:base \
          --platform linux/amd64,linux/arm64/v8 \
          -f ./Dockerfile_base . --no-cache
        export DOCKER_BUILDKIT=1
        DOCKER_BUILDKIT=1 docker buildx build --push \
          --tag pkjmesra/pkscreener:latest \
          --platform linux/amd64,linux/arm64/v8 . --no-cache

    - name: Publish latest images to Docker Hub
      continue-on-error: true
      # if: startsWith(github.ref, 'refs/heads/main')
      run: |
        docker buildx create --use
        DOCKER_BUILDKIT=1 docker buildx build --push \
        --tag pkjmesra/pkscreener:latest \
        --platform linux/amd64,linux/arm64/v8 . --no-cache
        DOCKER_BUILDKIT=1 docker buildx build --push \
          --tag pkjmesra/pkscreener:dev-latest \
          --platform linux/amd64,linux/arm64/v8 . --no-cache
        DOCKER_BUILDKIT=1 docker buildx build --push \
          --tag pkjmesra/pkscreener:${{ inputs.version }} \
          --platform linux/amd64,linux/arm64/v8 . --no-cache
        
    # - name: Publish release version image to Docker Hub
    #   # if: startsWith(${{ inputs.branch-name }}, 'refs/tags')
    #   run: |
    #     docker buildx create --use
    #     docker buildx build --push \
    #       --tag pkjmesra/pkscreener:latest \
    #       --platform linux/amd64,linux/arm64/v8 . --no-cache
